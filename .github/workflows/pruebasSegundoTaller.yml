name: Wikipedia Pipeline

on:
  workflow_dispatch:
    inputs:
      month:
        description: 'Mes (formato MM)'
        required: true
        default: '01'
      day:
        description: 'Día (formato DD)'
        required: true
        default: '01'

jobs:
  call-api:
    runs-on: ubuntu-latest
    outputs:
      events: ${{ steps.get-events.outputs.events }}
    steps:
      - name: Cache JSON file
        id: cache-json
        uses: actions/cache@v4
        with:
          path: response.json
          key: ${{ runner.os }}-json-${{ hashFiles('response.json') }}
          restore-keys: |
            ${{ runner.os }}-json-

      - name: Llamar API OnThisDay
        if: steps.cache-json.outputs.cache-hit != 'true'
        id: get-events
        run: |
          echo "Consultando API de Wikimedia..."
          curl --location --request GET "https://api.wikimedia.org/feed/v1/wikipedia/es/onthisday/all/${{ github.event.inputs.month }}/${{ github.event.inputs.day }}" > response.json
          echo "respuesta del API" > $response.json
          # Export JSON to output
          EVENTS=$(jq -c '.selected' "response.json")
          echo "events=$EVENTS" >> $GITHUB_OUTPUT

      - name: Check Cache Status
        id: check-cache
        run: |
          if [ "${{ steps.cache-json.outputs.cache-hit }}" == "true" ]; then
            echo "Se utilizó caché en esta ejecución."
          else
            echo "No se utilizó caché en esta ejecución."
          fi

  generate-pdfs:
    needs: call-api
    runs-on: ubuntu-latest
    strategy:
      matrix:
        event: ${{ fromJson(needs.call-api.outputs.events) }}
    steps:
      - name: Get Title and URL
        id: info
        run: |
          TITLE=$(echo '${{ matrix.event }}' | jq -r '.pages[0].title' | tr ' ' '_')
          URL=$(echo '${{ matrix.event }}' | jq -r '.pages[0].content_urls.desktop.page')
          echo "title=$TITLE" >> $GITHUB_OUTPUT
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Convert HTML to PDF
        id: convert-pdf
        uses: narthanaj/html-to-pdf-action@v1
        with:
          source: ${{ steps.info.outputs.url }}
          output: ${{ github.event.inputs.month }}-${{ github.event.inputs.day }}-${{ steps.info.outputs.title }}.pdf

      - name: Upload PDF Artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.month }}-${{ github.event.inputs.day }}-${{ steps.info.outputs.title }}
          path: ${{ github.event.inputs.month }}-${{ github.event.inputs.day }}-${{ steps.info.outputs.title }}.pdf
      
      